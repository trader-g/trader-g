name: Java API CI/CD on PR w/ tag
on:
  # push:
  #   branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
  push:
    tags:
      - 'v*'  

jobs:
  build_api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'


    - name: Generate application.properties
      run: |
        echo "spring.config.use-legacy-processing=true" >> application.properties
        echo "spring.datasource.url=jdbc:sqlserver://beantraderdb.cidtxn2ndtwc.eu-west-1.rds.amazonaws.com:1433;authentication=sqlPassword;databaseName=beantraderdb;encrypt=false;trustServerCertificate=true" >> application.properties
        echo "spring.datasource.username=${{ secrets.DB_BUILD_USERNAME }}" >> application.properties
        echo "spring.datasource.password=${{ secrets.DB_BUILD_PASSWORD }}" >> application.properties
        echo "spring.jpa.show-sql=true" >> application.properties
        echo "spring.jpa.properties.hibernate.format_sql = true" >> application.properties
        echo "spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServerDialect" >> application.properties
        echo "spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl" >> application.properties
        echo "spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl" >> application.properties
        echo "spring.jpa.properties.hibernate.default_schema=tdb" >> application.properties
        echo "github.client.id=d095913ff9b55112e726" >> application.properties
        echo "github.client.secret=f33c2fd6103c26f3b996f2a625d82ddd5d16e51e" >> application.properties
        echo "spring.security.oauth2.client.registration.github.client-id=d095913ff9b55112e726" >> application.properties
        echo "spring.security.oauth2.client.registration.github.client-secret=f33c2fd6103c26f3b996f2a625d82ddd5d16e51e" >> application.properties

    - name: Test & package
      run: |
        cd beancards
        mvn package -DskipTests
    
    - name: Login to DockerHub
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
    
    - name: Build & Publish Docker image
      run: |
        cd beancards
        docker build -t ${{secrets.DOCKER_USERNAME}}/trader-g .
        docker push ${{secrets.DOCKER_USERNAME}}/trader-g:latest

  deploy_api:
    needs: build_api
    runs-on: [aws-ec2]
    steps:
      - name: Pull image from docker
        run: sudo docker pull ${{secrets.DOCKER_USERNAME}}/trader-g:latest
      - name: Delete old container
        run: sudo docker rm -f traderDBEC2
      - name: Run container
        run: sudo docker run -d -p 80:8080 --name traderDBEC2 ${{secrets.DOCKER_USERNAME}}/trader-g:latest
